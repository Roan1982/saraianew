# Script para configurar X11 en Windows y ejecutar SARA con interfaz grÃ¡fica
# Requiere: VcXsrv instalado (https://sourceforge.net/projects/vcxsrv/)

Write-Host "=========================================" -ForegroundColor Cyan
Write-Host "    SARA ASISTENTE VIRTUAL - GUI MODE" -ForegroundColor Cyan
Write-Host "=========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar si VcXsrv estÃ¡ ejecutÃ¡ndose
Write-Host "Verificando servidor X11..." -ForegroundColor Yellow
try {
    $vcxsrv = Get-Process -Name "vcxsrv" -ErrorAction SilentlyContinue
    if ($vcxsrv) {
        Write-Host "âœ“ VcXsrv estÃ¡ ejecutÃ¡ndose (PID: $($vcxsrv.Id))" -ForegroundColor Green
    } else {
        Write-Host "âš  VcXsrv no estÃ¡ ejecutÃ¡ndose" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "Para habilitar la interfaz grÃ¡fica:" -ForegroundColor Cyan
        Write-Host "1. Descarga VcXsrv desde: https://sourceforge.net/projects/vcxsrv/" -ForegroundColor White
        Write-Host "2. Instala VcXsrv" -ForegroundColor White
        Write-Host "3. Ejecuta XLaunch con estas opciones:" -ForegroundColor White
        Write-Host "   - Multiple windows" -ForegroundColor Gray
        Write-Host "   - Display number: 0" -ForegroundColor Gray
        Write-Host "   - Start no client" -ForegroundColor Gray
        Write-Host "   - Disable access control" -ForegroundColor Gray
        Write-Host ""
        $response = Read-Host "Â¿Quieres continuar sin interfaz grÃ¡fica? (s/n)"
        if ($response -ne 's' -and $response -ne 'S') {
            exit 1
        }
    }
} catch {
    Write-Host "No se pudo verificar VcXsrv" -ForegroundColor Yellow
}

# Configurar variable DISPLAY
$env:DISPLAY = "host.docker.internal:0.0"
Write-Host "âœ“ Variable DISPLAY configurada: $env:DISPLAY" -ForegroundColor Green

# Verificar Docker
try {
    $dockerVersion = docker --version 2>$null
    Write-Host "âœ“ Docker encontrado: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "âœ— Docker no estÃ¡ instalado" -ForegroundColor Red
    exit 1
}

# Verificar Docker ejecutÃ¡ndose
try {
    docker info >$null 2>&1
    Write-Host "âœ“ Docker estÃ¡ ejecutÃ¡ndose" -ForegroundColor Green
} catch {
    Write-Host "âœ— Docker no estÃ¡ ejecutÃ¡ndose" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "Iniciando SARA con interfaz grÃ¡fica..." -ForegroundColor Yellow

# Ejecutar docker-compose
try {
    docker-compose up --build -d

    Write-Host ""
    Write-Host "âœ“ Servicios iniciados exitosamente!" -ForegroundColor Green
    Write-Host ""
    Write-Host "ðŸŽ¯ ACCESO AL ASISTENTE:" -ForegroundColor Cyan
    Write-Host "1. El asistente deberÃ­a aparecer como una ventana flotante" -ForegroundColor White
    Write-Host "2. Si no aparece, verifica que VcXsrv estÃ© ejecutÃ¡ndose" -ForegroundColor White
    Write-Host "3. La ventana del asistente tiene:" -ForegroundColor White
    Write-Host "   - Login (usuario/contraseÃ±a)" -ForegroundColor Gray
    Write-Host "   - Panel de consejos" -ForegroundColor Gray
    Write-Host "   - Chat rÃ¡pido" -ForegroundColor Gray
    Write-Host "   - Estado de monitoreo" -ForegroundColor Gray
    Write-Host ""
    Write-Host "ðŸ“Š SERVICIOS DISPONIBLES:" -ForegroundColor Cyan
    Write-Host "- Backend Django: http://localhost:8000" -ForegroundColor White
    Write-Host "- Base de datos: SQLite (persistente)" -ForegroundColor White
    Write-Host ""
    Write-Host "ðŸ”§ COMANDOS ÃšTILES:" -ForegroundColor Cyan
    Write-Host "- Ver estado: docker-compose ps" -ForegroundColor White
    Write-Host "- Ver logs backend: docker-compose logs -f backend" -ForegroundColor White
    Write-Host "- Ver logs asistente: docker-compose logs -f electron" -ForegroundColor White
    Write-Host "- Detener todo: docker-compose down" -ForegroundColor White
    Write-Host ""

} catch {
    Write-Host "âœ— Error al iniciar servicios: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "Presiona Enter para continuar..." -ForegroundColor Gray
Read-Host